// Java program for the above approach
public class FindMaximum {
	/* For a given array arr[],
		returns the maximum j-i such
	that arr[j] > arr[i] */
	int maxIndexDiff(int arr[], int n)
 {
 
    int []rightMax = new int[n];
    rightMax[n-1]= arr[n-1];
    for(int i = n-2; i>=0; i--)
      rightMax[i] = Math.max(rightMax[i+1] , arr[i]);
 
    // rightMax[i] = max{ arr[i...(n-1] }
    int maxDist = Integer.MIN_VALUE;
    int i = 0, j = 0;
    while(i < n && j < n)
    {
      if(rightMax[j] >= arr[i])
      {
        maxDist = Math.max( maxDist, j-i );
        j++;
      }
      else // if(rightMax[j] < leftMin[i])
        i++;
    }
 
    return maxDist;
 
 
  }

	/* Driver program to test above functions */
	public static void main(String[] args)
	{
		FindMaximum max = new FindMaximum();
		int arr[] = { 9, 2, 3, 4, 5, 6, 7, 8, 18, 0 };
		int n = arr.length;
		int maxDiff = max.maxIndexDiff(arr, n);
		System.out.println(maxDiff);
	}
}
